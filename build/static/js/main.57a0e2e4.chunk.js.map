{"version":3,"sources":["Store/action/action.js","Components/NavBar/NavBar.js","Components/Planet/Planet.js","Components/Search/Search.js","Components/SignIn/SignIn.js","App.js","Store/reducer/reducer.js","index.js"],"names":["signIn","userName","type","NavBar","user","useSelector","state","dispatch","useDispatch","className","to","onClick","Planet","number","name","population","style","fontSize","Search","props","useState","input","setInput","planets","setPlanets","searches","setSearches","error","setError","useEffect","timer","setTimeout","a","axios","get","then","res","data","results","catch","err","console","log","request","fetcher","clearTimeout","setInterval","action","htmlFor","id","onChange","e","target","value","map","planet","key","SignIn","setUserName","pass","setPass","login","setLogin","setErr","onSubmit","find","person","birth_year","preventDefault","fetchData","App","exact","path","component","initState","loginReducer","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57a0e2e4.chunk.js","sourcesContent":["\nexport const signIn = (userName) => {\n    return { type: \"LOGIN_SUCCESS\", userName };\n  };\n  \n  export const signOut = () => {\n    return { type: \"LOGOUT_SUCCESS\" };\n  };","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signOut } from \"../../Store/action/action\";\n\nfunction NavBar() {\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const handleLogOut = () => {\n    dispatch(signOut());\n  };\n\n  return (\n    <nav className=\"nav-wrapper blue darken-3\">\n      <div className=\"container\">\n        <div className=\"brand-logo\">Star Wars Planet Searcher!</div>\n        <ul className=\"right\">\n          <li>\n            {user ? (\n              <NavLink to=\"/\" onClick={handleLogOut}>\n                Sign Out\n              </NavLink>\n            ) : (\n              <NavLink to=\"/\">Sign In</NavLink>\n            )}\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;","import React from \"react\";\n\nfunction Planet({ name, population }) {\n  const getSize = (number) => {\n    if (number > 2000000000) {\n      return {\n        fontSize: \"5rem\",\n      };\n    } else if (number > 100000000) {\n      return {\n        fontSize: \"4rem\",\n      };\n    } else if (number > 6000000) {\n      return {\n        fontSize: \"3rem\",\n      };\n    } else {\n      return {\n        fontSize: \"1rem\",\n      };\n    }\n  };\n\n  return (\n    <div className=\"card blue-grey darken-2 col s12\">\n      <div className=\"card-content white-text\">\n        <h4 style={getSize(population)}>{name}</h4>\n        <p>Population: {population}</p>\n        <div className=\"right-align\">Planet</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Planet;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Planet from \"../Planet/Planet\";\nimport { useSelector } from \"react-redux\";\n\nfunction Search(props) {\n  const [input, setInput] = useState(\"\");\n  const [planets, setPlanets] = useState([]);\n  const [searches, setSearches] = useState(0);\n  const [error, setError] = useState(\"\");\n\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      const fetcher = async function fetchData() {\n        const request = await axios\n          .get(`https://swapi.dev/api/planets/?search=${input}`)\n          .then((res) => {\n            setSearches(searches + 1);\n            return setPlanets(res.data.results);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n        return request;\n      };\n      fetcher();\n    }, 200);\n    return () => clearTimeout(timer);\n  }, [input]);\n\n  const handleChange = (e) => {\n    if (searches <= 15 || user === \"Luke Skywalker\") {\n      setInput(e.target.value);\n    } else {\n      setError(\n        \"You have exceeded search limits in one minute, try again later, when the message dissapears\"\n      );\n    }\n    console.log(searches);\n  };\n\n  const cleanSearches = () => {\n    setSearches(0);\n    setError(\"\");\n  };\n  setInterval(cleanSearches, 60000);\n\n  return (\n    <div className=\"container\">\n      <h4>Welcome, {user ? user : \"stranger\"}</h4>\n      <form action=\"\">\n        <h4>{}</h4>\n        <div className=\"input-field search\">\n          <i className=\"material-icons prefix\">search</i>\n          <label htmlFor=\"search\">Search planet</label>\n          <input type=\"text\" id=\"search\" onChange={handleChange} />\n        </div>\n      </form>\n      <div className=\"row\">\n        {error && <h3 className=\"red-text\">{error}</h3>}\n        {planets ? (\n          planets.map((planet) => (\n            <Planet\n              key={planet.name}\n              name={planet.name}\n              population={planet.population}\n            />\n          ))\n        ) : (\n          <div>Loading</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Search;","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { signIn } from \"../../Store/action/action\";\n\nfunction SignIn() {\n  const [userName, setUserName] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [login, setLogin] = useState(false);\n  const [err, setErr] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    async function fetchData() {\n      const request = await axios\n        .get(`https://swapi.dev/api/people/?search=${userName}`)\n        .then((res) => {\n          const person = res.data.results.find(\n            (person) => person.name === userName\n          );\n          if (person.birth_year === pass) {\n            setLogin(true);\n            dispatch(signIn(userName));\n          } else {\n            setErr(\"Your galaxy password was incorrect\");\n            console.log(\"ERRROR PASSCODE INCORRECT\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      return request;\n    }\n    fetchData();\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-2\">Sign In</h5>\n        <div className=\"input-field username_input\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            onChange={(e) => setUserName(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            onChange={(e) => setPass(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn blue lighten-2 z-depth-1\">Sign In</button>\n        </div>\n        <div className=\"red-text\">{err && <h4>{err}</h4>}</div>\n        {login && <Redirect to=\"/search\" />}\n      </form>\n    </div>\n  );\n}\n\nexport default SignIn;","import React from \"react\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport Search from \"./Components/Search/Search\";\nimport SignIn from \"./Components/SignIn/SignIn\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={SignIn} />\n          <Route path=\"/search\" component={Search} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const initState = {\n    user: null,\n  };\n  \n  const loginReducer = (state = initState, action) => {\n    switch (action.type) {\n      case \"LOGIN_SUCCESS\":\n        return {\n          ...state,\n          user: action.userName,\n        };\n      case \"LOGOUT_SUCCESS\":\n        return {\n          ...state,\n          user: null,\n        };\n      default:\n        return state;\n    }\n  };\n  \n  export default loginReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./Store/reducer/reducer\";\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}